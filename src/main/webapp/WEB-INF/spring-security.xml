<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
 http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<global-method-security secured-annotations="enabled" />

	<http pattern="/login/**" security="none" />
	<http pattern="/resources/**" security="none" />
	<http pattern="/register/**" security="none" />
	<http pattern="/item/**" security="none" />

	<!-- stateless RESTful for pure data and basic auth -->
	<http pattern="/rest/**" create-session="stateless">
		<intercept-url pattern='/**' access='ROLE_USER' />
		<http-basic />
	</http>

	<http auto-config="true">
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_USER, ROLE_ADMIN" />
		<form-login login-page="/login" always-use-default-target="true" />
		<logout logout-success-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<security:password-encoder hash="md5" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="
		      select login,password, enabled   
		      from user where login=?"

				authorities-by-username-query="
		      select login, authority from user 
		      where login =?  " />
		</authentication-provider>
	</authentication-manager>
</beans:beans>